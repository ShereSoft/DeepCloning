<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net6.0;net5.0;netcoreapp3.1;net40;net45;net46;net47;net48</TargetFrameworks>
    <ImplicitUsings>disable</ImplicitUsings>
    <Nullable>disable</Nullable>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <Authors>ShereSoft</Authors>
    <RepositoryType>git</RepositoryType>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <RepositoryUrl>https://github.com/ShereSoft/DeepCloning</RepositoryUrl>
    <PackageTags>deep clone;deep copy;object copy;object clone;clone;copy;deepclone;deepcloning;deepcopy;map;memberwisecopy;object;automapper;mapper;extensions;deepcloner;deep cloner;fast;anyclone;il;fastdeepcloner;GeorgeCloney;serialize'serialization;parsing;nclone;objectclone;shallow copy;shallowcopy</PackageTags>
    <PackageProjectUrl>https://github.com/ShereSoft/DeepCloning</PackageProjectUrl>
    <Copyright>Copyright © 2020-2022 Sheresoft</Copyright>
    <Description>Provides a set of methods to deep-copy an instance of any object. Implemented in Common Intermediate Language (.NET Assembler) offering performance equivalent to hand-written C# code. Multi-targeted libraries. (NOT a .NET Standard library) No dependencies.</Description>
    <Version>1.1.0</Version>
    <PackageReleaseNotes>
1.1.0
 * Can optionally specify unclonable objects in DeepCloningOptions.UnclonableObjects (Use this feature to force to shallow-copy)
 * Use the native value copy for all simple value types not limited to primitives (Improved simple value type detection)
 * Fixed issues with reusing plain object instances (A new instance was created every time. No reusing.)
 * Inlined the sealed type detection and the actual/declared type detection as part of the cloner
 * Improved startup time

1.0.2
 * Fixed issues with copying null elements in collections
 * Improved performance by a single delegate, more optimized runtime evaluation, more inlining implementation and more optimized Assembler code
 * Added unit tests for the resolved issues
 * Reduced the assembly size.
 
1.0.1
 * Added .NET Framework support for 4.0, 4.6, 4.7 and 4.8
 * Made cloner creation lock-free
 
1.0.0
 * Can deep-clone instances of any object
 * Implemented in Common Intermediate Language (.NET Assembly), compiled for each type at runtime, and cached for subsequent use.
 * No use of Reflection for cloning
 * Configurable for string handling (deep clone or not) and singleton handling (reuse or clone)
 * Thread-safe
 * Includes extension methods (ObjectExtensions) for conveniently calling from any object instance (Recommended usage)
 * Unit Tested
 * Multi-targeted (.NET 6, .NET 5, .NET Core 3.1, .NET Framework 4.5)
 * No external library dependencies
 * No external calls
</PackageReleaseNotes>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net6.0|AnyCPU'">
    <WarningLevel>5</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net6.0|AnyCPU'">
    <WarningLevel>5</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <None Update="ShereSoft.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

</Project>
